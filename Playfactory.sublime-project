{
	"folders":
	[
		{
			"path": ".",
			"folder_exclude_patterns":
			[
				"build",
				"lib",
				".vs",
				"Debug",
				"engine",
			],
		},
		{
			"name": "PigEngine",
			"path": "engine/platform/playdate",
		},
		{
			"name": "GyLib",
			"path": "lib/include/gylib",
		},
		{
			"path": "build",
			"folder_exclude_patterns":
			[
				".vs",
				"*.pdx",
			],
			"file_exclude_patterns":
			[
				"*.exp",
				"*.map",
				"*.obj",
				"*.ilk",
				"*.manifest",
				"preprocessed_output.txt",
			],
		},
		{
			"path": "C:\\Users\\robbitay\\Documents\\MyStuff\\Programs\\PlaydateSDK",
			"folder_exclude_patterns":
			[
				".sentry-native",
				"bin",
				"Designing for Playdate",
				"Disk",
				"Inside Playdate",
				"PlaydateSDK.docset",
				"resources",
				"C_API/buildsupport",
				"CoreLibs/assets",
			],
			"file_exclude_patterns":
			[
				"*.html",
				"*.css",
			],
		},
	],
	"settings":
	{
		"build_options":
		[
		],
		"custom_constants":
		[			"AppState_MainMenu",
			"DEFAULT_WORLD_SEED",
			"DEFAULT_WORLD_SIZE",
			"GAME_VIEW_MOVE_LAG_WHILE_MOVING",
			"GAME_VIEW_MOVE_LAG_WHILE_STOPPED",
			"GAME_VIEW_MOVE_SPEED",
			"GAME_VIEW_SCREEN_EDGE_PADDING",
			"GAME_VIEW_STOP_MOVE_DIST_TO_TARGET",
			"GAME_VIEW_VEL_BASED_LOOK_AHEAD_DIST",
			"INV_ITEM_SIZE",
			"INV_SLOT_ADVANCE",
			"INV_SLOT_SIZE",
			"InvType_None",
			"InvType_NumTypes",
			"InvType_PlayerInventory",
			"InvType_SmallBox",
			"LCD_COLUMNS",
			"LCD_ROWS",
			"MAX_NUM_COLLISIONS_PER_FRAME",
			"MMENU_BTN_HORIZONTAL_PADDING",
			"MMENU_BTN_SPACING",
			"MMENU_BTN_VERTICAL_PADDING",
			"MMenuAction_Exit",
			"MMenuAction_None",
			"MMenuAction_NumActions",
			"MMenuAction_Play",
			"MMenuAction_Settings",
			"PLAYER_COLLISION_REC",
			"PLAYER_FRICTION",
			"PLAYER_INV_SIZE",
			"PLAYER_SIZE",
			"PLAYER_WALK_SPEED",
			"TILE_SIZE",
			"TileType_Caramel",
			"TileType_Cherry",
			"TileType_Grass",
			"TileType_None",
			"TileType_NumTiles",
			"TileType_Peppermint",
			"TileType_Strawberry",
			"WORLD_GEN_CANDY_DENSITY",
			"WORLD_GEN_GRASS_DENSITY",
		],
		"custom_functions":
		[			"#define AddInvSlot(groupId, gridPos, position)",
			"#define TwoPassAddSlotLoop()",
			"#define TwoPassAddSlotLoopEnd()",
			"BitmapData_t GetBitmapData(LCDBitmap* bitmap, bool sizeOnly = false)",
			"Dir2Ex_t Dir2ExFromDir2Flags(u8 dirFlags)",
			"Font_t* PdBindFont(Font_t* font)",
			"InvSlot_t* GetInvSlotsForInvType(InvType_t type, MemArena_t* memArena, u64* numSlotsOut)",
			"ItemStack_t NewItemStack(ItemId_t id, u8 count)",
			"LCDBitmapDrawMode PdSetDrawMode(LCDBitmapDrawMode drawMode)",
			"MMenuBtn_t* AddButtonMainMenu(MMenuAction_t action, MyStr_t displayText)",
			"Texture_t CreateTexture(v2i size, u64 dataSize, const u8* pixelData, const u8* maskData)",
			"WorldTile_t* GetWorldTileAt(World_t* world, v2i tilePos)",
			"bool IsSolidWorldTileAt(World_t* world, v2i tilePos)",
			"bool IsTileTypeSolid(TileType_t type)",
			"const char* GetInvTypeStr(InvType_t enumValue)",
			"const char* GetMMenuActionStr(MMenuAction_t enumValue)",
			"const char* GetPDLanguageStr(PDLanguage language)",
			"const char* GetPDSystemEventStr(PDSystemEvent event)",
			"const char* GetTileTypeStr(TileType_t enumValue)",
			"r32 Animate(r32 min, r32 max, u64 periodMs, u64 offset = 0)",
			"r32 AnimateAndPauseBy(u64 timeSource, r32 min, r32 max, u64 animationTime, u64 pauseTime, u64 offset = 0)",
			"r32 AnimateBy(u64 timeSource, r32 min, r32 max, u64 periodMs, u64 offset = 0)",
			"r32 Oscillate(r32 min, r32 max, u64 periodMs, u64 offset = 0)",
			"r32 OscillateBy(u64 timeSource, r32 min, r32 max, u64 periodMs, u64 offset = 0)",
			"u64 AnimateAndPauseByU64(u64 timeSource, u64 min, u64 max, u64 animationTime, u64 pauseTime, u64 offset = 0, bool useFirstFrameForPause = false)",
			"u64 AnimateByU64(u64 timeSource, u64 min, u64 max, u64 periodMs, u64 offset = 0)",
			"u64 AnimateU64(u64 min, u64 max, u64 periodMs, u64 offset = 0)",
			"u8 Dir2FlagsFromDir2Ex(Dir2Ex_t dir2ex)",
			"v2 ClampGameViewToWorld(v2 position, v2 viewSize, v2i worldSize)",
			"v2 ResolveWorldTileCollisions(World_t* world, rec colRec)",
			"v2 ToVec2(Dir2Ex_t dir2ex)",
			"v2i GetBitmapSize(LCDBitmap* bitmap)",
			"v2i GetTileTypeFrame(TileType_t type, bool inWorld, v2i gridPos)",
			"v2i MeasureText(LCDFont* font, MyStr_t text, i32 tracking = 0)",
			"void FreeInventory(Inventory_t* inventory)",
			"void FreePlayer(Player_t* player)",
			"void FreeWorld(World_t* world)",
			"void GameViewUpdateWorldRec(GameView_t* view)",
			"void InitGameView(GameView_t* view, v2 startPos, v2i worldSize)",
			"void InitInventory(Inventory_t* inventory, MemArena_t* memArena, InvType_t type)",
			"void InitPlayer(Player_t* player, MemArena_t* memArena, v2 startPos)",
			"void InitWorld(World_t* world, MemArena_t* memArena, v2i size, u64 seed)",
			"void PdBeginFrame()",
			"void PdDrawLine(v2i start, v2i end, i32 width, LCDColor color = kColorBlack)",
			"void PdDrawRec(reci drawRec, LCDColor color = kColorBlack)",
			"void PdDrawRecOutline(reci drawRec, i32 thickness, bool outside = false, LCDColor color = kColorBlack)",
			"void PdDrawSheetFrame(SpriteSheet_t sheet, v2i frame, reci drawRec)",
			"void PdDrawText(MyStr_t text, v2i position)",
			"void PdDrawTextPrint(v2i position, const char* formatString, ...)",
			"void PdDrawTexturedRec(Texture_t texture, reci drawRec)",
			"void PdSetRenderOffset(v2i offset)",
			"void PlaceButtonsListMainMenu()",
			"void RenderInventoryUi(Inventory_t* inventory)",
			"void RenderPlayer(Player_t* player)",
			"void RenderWorld(World_t* world)",
			"void StartAppState_MainMenu(bool initialize, AppState_t prevState, MyStr_t transitionStr)",
			"void StopAppState_MainMenu(bool deinitialize, AppState_t nextState)",
			"void UpdateAppState_MainMenu()",
			"void UpdateGameView(GameView_t* view, v2 playerPos, v2 playerInputVec, v2i worldSize)",
			"void UpdatePlayer(Player_t* player, World_t* world)",
			"void UpdateWorld(World_t* world)",
		],
		"custom_globals":
		[			"ElapsedMs",
			"ProgramTime",
			"ScreenSize",
			"ScreenSizef",
			"TimeScale",
			"boundFont",
			"currentDrawMode",
			"fixedHeap",
			"input",
			"mainHeap",
			"mmenu",
			"pd",
			"pig",
		],
		"custom_types":
		[			"BitmapData_t",
			"GameView_t",
			"InvSlot_t",
			"InvType_t",
			"Inventory_t",
			"ItemStack_t",
			"MMenuAction_t",
			"MMenuBtn_t",
			"MainMenuState_t",
			"Player_t",
			"TileType_t",
			"WorldTile_t",
			"World_t",
		],
	},
}
